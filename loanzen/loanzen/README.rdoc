== README

This is a mini search engine just like elastic search which uses inverted Index to store and retrieve data in O(1) time.
The results returned uses Term frequency to sort the results.

== API Call: 

1.) To Index/Create: [POST] http://localhost:9001/movies?content=Any content that you want to put in here for indexing
2.) To Search [GET] http://localhost:9001/movies/search?queries=any,content,you,want,to,search&all=true

== API Call Explaination: 

First call is a Post call which takes a content parameter and filters the content out of it for storing and searching purposes. I have personally used Postman to Hit the API. 
It would return "OK" if file is saved else "Error".

Second call is a GET call which takes two parameters.
a.) queries = Comman seperated words to search for.
b.) all = a boolean which can be passed to search for the documents which contains all the words in query. 

For example: the API - http://localhost:9001/movies/search?queries=whole,world&all=true would return only those documents which has both the words "whole" as well as "true"
However, the API - http://localhost:9001/movies/search?queries=whole,world shall return all the documents which contains either of the words or even both.

This search engine is in very early stage and has a lot of bugs and features to be built on top of it. 

The best thing about this search engine is it searches the whole document in O(1) time.

== How to install/Run: 

Ruby - 2.3, Rails 4.4 should be installed.

1.) Clone the repo in local
2.) Run "rake db:migrate"
3.) start rails server in terminal using "rails s -p 9001"
4.) Hit the API for indexing.
5.) Hit the API for searching.

If you are a naughty person and decides to jump on step 5 rather than 4, you'd get... ehhhh, just try it if you wish. :)

